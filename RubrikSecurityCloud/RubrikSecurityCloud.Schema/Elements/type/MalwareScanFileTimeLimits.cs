// MalwareScanFileTimeLimits.cs
//
// This file is part of the Rubrik PowerShell SDK.
// Generated on 2023-04-13 20:03:39.
// Manual changes to this file may be lost.

#nullable enable
using System;
using System.Collections.Generic;
using System.Text;
using System.ComponentModel.DataAnnotations;
using Newtonsoft.Json;
using System.Reflection;
using System.Text.RegularExpressions;

namespace Rubrik.SecurityCloud.Types
{
    #region MalwareScanFileTimeLimits
    public class MalwareScanFileTimeLimits: IFragment
    {
        #region members
        //      C# -> DateTime? EarliestCreationTime
        // GraphQL -> earliestCreationTime: DateTime (scalar)
        [JsonProperty("earliestCreationTime")]
        public DateTime? EarliestCreationTime { get; set; }

        //      C# -> DateTime? EarliestModificationTime
        // GraphQL -> earliestModificationTime: DateTime (scalar)
        [JsonProperty("earliestModificationTime")]
        public DateTime? EarliestModificationTime { get; set; }

        //      C# -> DateTime? LatestCreationTime
        // GraphQL -> latestCreationTime: DateTime (scalar)
        [JsonProperty("latestCreationTime")]
        public DateTime? LatestCreationTime { get; set; }

        //      C# -> DateTime? LatestModificationTime
        // GraphQL -> latestModificationTime: DateTime (scalar)
        [JsonProperty("latestModificationTime")]
        public DateTime? LatestModificationTime { get; set; }

        #endregion

    #region methods

    public MalwareScanFileTimeLimits Set(
        DateTime? EarliestCreationTime = null,
        DateTime? EarliestModificationTime = null,
        DateTime? LatestCreationTime = null,
        DateTime? LatestModificationTime = null
    ) 
    {
        if ( EarliestCreationTime != null ) {
            this.EarliestCreationTime = EarliestCreationTime;
        }
        if ( EarliestModificationTime != null ) {
            this.EarliestModificationTime = EarliestModificationTime;
        }
        if ( LatestCreationTime != null ) {
            this.LatestCreationTime = LatestCreationTime;
        }
        if ( LatestModificationTime != null ) {
            this.LatestModificationTime = LatestModificationTime;
        }
        return this;
    }

            //[JsonIgnore]
        // AsFragment returns a string that denotes what
        // fields are not null, recursively for non-scalar fields.
        public string AsFragment(int indent=0)
        {
            string ind = new string(' ', indent*2);
            string s = "";
            //      C# -> DateTime? EarliestCreationTime
            // GraphQL -> earliestCreationTime: DateTime (scalar)
            if (this.EarliestCreationTime != null)
            {
                 s += ind + "earliestCreationTime\n";

            }
            //      C# -> DateTime? EarliestModificationTime
            // GraphQL -> earliestModificationTime: DateTime (scalar)
            if (this.EarliestModificationTime != null)
            {
                 s += ind + "earliestModificationTime\n";

            }
            //      C# -> DateTime? LatestCreationTime
            // GraphQL -> latestCreationTime: DateTime (scalar)
            if (this.LatestCreationTime != null)
            {
                 s += ind + "latestCreationTime\n";

            }
            //      C# -> DateTime? LatestModificationTime
            // GraphQL -> latestModificationTime: DateTime (scalar)
            if (this.LatestModificationTime != null)
            {
                 s += ind + "latestModificationTime\n";

            }
            return new string(s);
        }


    
        //[JsonIgnore]
        public void ApplyExploratoryFragment(String parent = "")
        {
            //      C# -> DateTime? EarliestCreationTime
            // GraphQL -> earliestCreationTime: DateTime (scalar)
            if (this.EarliestCreationTime == null && Exploration.Includes(parent + ".earliestCreationTime$"))
            {
                this.EarliestCreationTime = new DateTime();
            }
            //      C# -> DateTime? EarliestModificationTime
            // GraphQL -> earliestModificationTime: DateTime (scalar)
            if (this.EarliestModificationTime == null && Exploration.Includes(parent + ".earliestModificationTime$"))
            {
                this.EarliestModificationTime = new DateTime();
            }
            //      C# -> DateTime? LatestCreationTime
            // GraphQL -> latestCreationTime: DateTime (scalar)
            if (this.LatestCreationTime == null && Exploration.Includes(parent + ".latestCreationTime$"))
            {
                this.LatestCreationTime = new DateTime();
            }
            //      C# -> DateTime? LatestModificationTime
            // GraphQL -> latestModificationTime: DateTime (scalar)
            if (this.LatestModificationTime == null && Exploration.Includes(parent + ".latestModificationTime$"))
            {
                this.LatestModificationTime = new DateTime();
            }
        }


    #endregion

    } // class MalwareScanFileTimeLimits
    #endregion

    public static class ListMalwareScanFileTimeLimitsExtensions
    {
        // This SDK uses the convention of defining fragments by
        // _un-null-ing_ fields in an object of the type of the fragment
        // we want to create. When creating a fragment from an object,
        // all fields (including nested objects) that are not null are
        // included in the fragment. When creating a fragment from a list,
        // there is possibly a different fragment with each item in the list,
        // but the GraphQL syntax for list fragment is identical to
        // object fragment, so we have to decide how to generate the fragment.
        // We choose to generate a fragment that includes all fields that are
        // not null in the *first* item in the list. This is not a perfect
        // solution, but it is a reasonable one.
        public static string AsFragment(
            this List<MalwareScanFileTimeLimits> list,
            int indent=0)
        {
            return list[0].AsFragment();
        }

        public static void ApplyExploratoryFragment(
            this List<MalwareScanFileTimeLimits> list, 
            String parent = "")
        {
            var item = new MalwareScanFileTimeLimits();
            list.Add(item);
            item.ApplyExploratoryFragment(parent);
        }
    }


} // namespace Rubrik.SecurityCloud.Types